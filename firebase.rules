rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.email == string(get(/databases/$(database)/documents/admin/config).data.adminEmail);
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isValidProduct() {
      return request.resource.data.keys().hasAll(['name', 'price', 'status']) &&
             request.resource.data.name is string &&
             request.resource.data.price is number &&
             request.resource.data.price >= 0 &&
             request.resource.data.status in ['active', 'inactive'];
    }

    function isValidCategory() {
      return request.resource.data.keys().hasAll(['name', 'status']) &&
             request.resource.data.name is string &&
             request.resource.data.status in ['active', 'inactive'];
    }

    // Admin configuration
    match /admin/config {
      allow read: if isAdmin();
      allow write: if false; // Only modifiable through Firebase Console
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;
      allow create: if isAdmin() && isValidProduct();
      allow update: if isAdmin() && isValidProduct();
      allow delete: if isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAdmin() || (isAuthenticated() && request.auth.uid == resource.data.userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if false; // Orders should never be deleted
    }

    // Categories collection
    match /categories/{categoryId} {
      allow read: if true;
      allow create: if isAdmin() && isValidCategory();
      allow update: if isAdmin() && isValidCategory();
      allow delete: if isAdmin() && !exists(/databases/$(database)/documents/products/$(productId)) 
                                   where resource.data.categoryId == categoryId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAdmin() || isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin();

      // User's private data subcollection
      match /private/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }

    // Rate limiting collection
    match /ratelimits/{document=**} {
      allow read, write: if false; // Only accessible through Cloud Functions
    }
  }
} 